AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Creates a VPC named VPC-jilfui4835 with 3 public subnets across 3 AZs.
  Deploy this stack in us-west-2 (Oregon).

Parameters:
  VpcCidr:
    Type: String
    Default: 10.0.0.0/16
    Description: CIDR block for the VPC (must be a valid IPv4 CIDR, e.g., 10.0.0.0/16)

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: VPC-jilfui4835

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: VPC-jilfui4835-igw

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: VPC-jilfui4835-public-rt

  DefaultRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  # --- Public Subnet 1 (AZ 0) ---
  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      CidrBlock: !Select
        - 0
        - !Cidr [!Ref VpcCidr, 8, 8]   # produces /24s from the /16, we pick index 0,1,2
      Tags:
        - Key: Name
          Value: VPC-jilfui4835-public-a

  PublicSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetA
      RouteTableId: !Ref PublicRouteTable

  # --- Public Subnet 2 (AZ 1) ---
  PublicSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: true
      CidrBlock: !Select
        - 1
        - !Cidr [!Ref VpcCidr, 8, 8]
      Tags:
        - Key: Name
          Value: VPC-jilfui4835-public-b

  PublicSubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetB
      RouteTableId: !Ref PublicRouteTable

  # --- Public Subnet 3 (AZ 2) ---
  PublicSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [2, !GetAZs '']
      MapPublicIpOnLaunch: true
      CidrBlock: !Select
        - 2
        - !Cidr [!Ref VpcCidr, 8, 8]
      Tags:
        - Key: Name
          Value: VPC-jilfui4835-public-c

  PublicSubnetCRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetC
      RouteTableId: !Ref PublicRouteTable

Outputs:
  VpcId:
    Description: The ID of the created VPC
    Value: !Ref VPC
    Export:
      Name: VPC-jilfui4835-VpcId

  PublicSubnetIds:
    Description: Comma-separated list of public subnet IDs (A,B,C)
    Value: !Join [",", [!Ref PublicSubnetA, !Ref PublicSubnetB, !Ref PublicSubnetC]]

  PublicRouteTableId:
    Description: The public route table ID
    Value: !Ref PublicRouteTable
